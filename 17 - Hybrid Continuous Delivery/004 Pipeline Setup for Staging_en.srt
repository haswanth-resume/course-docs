1
00:00:00,510 --> 00:00:00,730
Okay.

2
00:00:00,780 --> 00:00:02,840
So we have almost everything ready.

3
00:00:02,850 --> 00:00:07,110
Now it's time to write our pipeline script and test it.

4
00:00:07,740 --> 00:00:14,460
But even before that, we need to do a few more changes, starting with our source code.

5
00:00:14,460 --> 00:00:19,560
Let's open git bash and go to your git repository.

6
00:00:20,520 --> 00:00:21,990
So mine is in.

7
00:00:22,940 --> 00:00:23,840
Here.

8
00:00:26,320 --> 00:00:26,500
Okay.

9
00:00:26,530 --> 00:00:29,200
I'm going to switch to the branch.

10
00:00:30,660 --> 00:00:33,120
Sy hyphen Jenkins.

11
00:00:33,120 --> 00:00:35,220
So this is what we just tested.

12
00:00:36,000 --> 00:00:38,670
Securities integration pipeline is working very well.

13
00:00:39,640 --> 00:00:42,790
From this, I'm going to create another branch.

14
00:00:43,090 --> 00:00:46,510
We name it as secede hyphen gen bean.

15
00:00:47,340 --> 00:00:54,360
And I'll put a stage over there just to show you that this is for the staging environment.

16
00:00:55,930 --> 00:01:02,300
Oh, I need to give a hyphen B so it creates the branch and then switches there.

17
00:01:02,440 --> 00:01:02,950
Okay.

18
00:01:05,820 --> 00:01:06,080
Okay.

19
00:01:06,090 --> 00:01:07,620
Let's open the voice code.

20
00:01:07,650 --> 00:01:08,790
Code dot.

21
00:01:12,480 --> 00:01:13,040
Okay.

22
00:01:13,190 --> 00:01:13,920
Not this.

23
00:01:13,920 --> 00:01:15,000
Not this.

24
00:01:16,110 --> 00:01:16,280
Okay.

25
00:01:16,380 --> 00:01:18,900
CCD Jen Bean Stage Correct.

26
00:01:18,900 --> 00:01:21,630
Branch Let's open the Jenkins file.

27
00:01:21,990 --> 00:01:26,610
So this is the pipeline script for the continuous integration.

28
00:01:26,610 --> 00:01:31,140
We are going to extend it to continuous delivery and deploying it to bean stack.

29
00:01:31,710 --> 00:01:35,220
So we are going to basically run a CLI command.

30
00:01:36,760 --> 00:01:37,480
And.

31
00:01:38,390 --> 00:01:40,800
We are going to mention a few variables over there.

32
00:01:40,820 --> 00:01:46,670
Let me first show you the CLI commands that we'll be executing from our pipeline.

33
00:01:47,890 --> 00:01:48,620
There.

34
00:01:48,760 --> 00:01:54,210
So the first command is to upload the artifact to the S3 bucket.

35
00:01:54,220 --> 00:02:01,390
So we'll take a variable and we'll give this artifact a name, and this artifact will be based on the

36
00:02:01,390 --> 00:02:08,960
build ID so it takes the artifact v profile v two dot var uploads to a three bucket and make sure versions

37
00:02:08,979 --> 00:02:10,660
it next.

38
00:02:11,290 --> 00:02:18,190
The second command is going to create this is a plus Elastic Beanstalk create application version.

39
00:02:18,190 --> 00:02:20,680
So it's going to create a new version upload.

40
00:02:21,590 --> 00:02:25,370
This artifact to the beanstalk.

41
00:02:25,480 --> 00:02:28,310
Now, if you're doing this manually, this is how it is done.

42
00:02:29,270 --> 00:02:34,490
We go to bins tag application version and we say upload and we upload the artifact.

43
00:02:35,120 --> 00:02:36,920
So we choose the file, we upload it.

44
00:02:37,780 --> 00:02:42,340
But this command over here is going to do it from the street pocket.

45
00:02:42,370 --> 00:02:46,510
It's going to download the artifact from the S3 bucket and upload it to Elastic Beanstalk.

46
00:02:46,540 --> 00:02:49,270
Now, this is creating a version, not deploying it.

47
00:02:50,150 --> 00:02:53,600
The third command is going to deploy that version.

48
00:02:53,600 --> 00:02:55,850
So we mentioned the application name.

49
00:02:57,790 --> 00:03:03,850
And the environment name and the Virgin label, the Virgin label we are creating over here.

50
00:03:03,850 --> 00:03:09,550
This will be based on the build ID, whatever current build ID is, that will be the version of our.

51
00:03:10,410 --> 00:03:11,430
Application.

52
00:03:11,910 --> 00:03:13,110
So total three steps.

53
00:03:13,110 --> 00:03:14,790
We will put this into the Jenkins file.

54
00:03:14,790 --> 00:03:18,000
And if you see there are a few variables, let's define those variables.

55
00:03:18,000 --> 00:03:20,580
First, let's go back to VTS code.

56
00:03:22,160 --> 00:03:26,090
In the environment section define those variables.

57
00:03:26,600 --> 00:03:33,740
So their artifact name, I'm naming it as v profile hyphen V builder ID so it's going to take the build

58
00:03:33,740 --> 00:03:38,660
ID from the Jenkins to that will be the artifact name, then the S3 bucket.

59
00:03:38,690 --> 00:03:40,100
Let me change that.

60
00:03:40,250 --> 00:03:42,760
Let's go back to it.

61
00:03:43,000 --> 00:03:46,310
Just three to go back to the S3 bucket.

62
00:03:46,760 --> 00:03:48,410
Get the S3 bucket name.

63
00:03:51,390 --> 00:03:52,770
So that's the name.

64
00:03:53,100 --> 00:03:56,040
Make sure you put your S3 bucket name.

65
00:03:57,580 --> 00:03:59,110
Now it will be definitely different.

66
00:03:59,110 --> 00:04:04,270
You cannot use the same bucket name as I have used, so you must have created a bucket with a different

67
00:04:04,270 --> 00:04:04,750
name.

68
00:04:05,570 --> 00:04:09,620
Then it was EB app name variable the application name.

69
00:04:10,190 --> 00:04:13,070
So the beans stack cancel that.

70
00:04:14,190 --> 00:04:15,210
Application.

71
00:04:15,210 --> 00:04:18,300
So the pro app, that's our application name.

72
00:04:23,230 --> 00:04:23,690
Mm hmm.

73
00:04:27,220 --> 00:04:27,570
Yeah.

74
00:04:27,580 --> 00:04:28,600
Only that much.

75
00:04:29,320 --> 00:04:31,090
Then the environment name.

76
00:04:31,480 --> 00:04:33,550
So that's my environment name.

77
00:04:38,340 --> 00:04:40,230
It's exactly as it is.

78
00:04:40,590 --> 00:04:42,210
Then EB app version.

79
00:04:42,210 --> 00:04:46,710
This variable we are using for the application version in the beans tag.

80
00:04:46,710 --> 00:04:49,110
So we're just giving the build ID, that's all.

81
00:04:49,680 --> 00:04:54,540
If you want, you can add a few things here like repro app, hyphen, builder ID, stuff like that.

82
00:04:54,540 --> 00:04:57,060
But I'm just going to keep it build adding the number.

83
00:04:57,690 --> 00:05:03,420
Now let's add the stage to execute those click command.

84
00:05:03,720 --> 00:05:04,710
So there.

85
00:05:06,160 --> 00:05:07,210
Stage.

86
00:05:11,500 --> 00:05:14,350
We call it as deploy to.

87
00:05:15,740 --> 00:05:18,890
Stage been.

88
00:05:20,050 --> 00:05:22,900
And open close curly brace.

89
00:05:23,860 --> 00:05:29,950
Now those click command needs eight axis keys for the permission for the privilege.

90
00:05:29,950 --> 00:05:37,840
So we will be executing all those click command with width credentials with a credential plugin.

91
00:05:39,790 --> 00:05:43,210
That one open and close curly brace.

92
00:05:43,930 --> 00:05:45,280
So, credentials.

93
00:05:45,280 --> 00:05:47,020
You already saved this in the Jenkins.

94
00:05:47,020 --> 00:05:48,790
Let's get that credential name.

95
00:05:51,160 --> 00:05:52,450
Manny Jenkins.

96
00:05:54,500 --> 00:06:00,950
Now, I remember this very well, but I want you to go and find out yourself what credential you used.

97
00:06:01,340 --> 00:06:03,230
So that's the name I used.

98
00:06:06,030 --> 00:06:08,370
Region is the US West one.

99
00:06:09,270 --> 00:06:10,280
US West one.

100
00:06:10,290 --> 00:06:12,870
This is the region of the Beanstalk.

101
00:06:13,050 --> 00:06:14,130
US West one.

102
00:06:14,130 --> 00:06:14,940
For me.

103
00:06:15,940 --> 00:06:18,700
Make sure you give the correct region name.

104
00:06:20,510 --> 00:06:21,680
Okay, then.

105
00:06:24,950 --> 00:06:25,240
Okay.

106
00:06:25,250 --> 00:06:25,580
Yeah.

107
00:06:25,580 --> 00:06:28,730
Then our three eight seal command.

108
00:06:29,120 --> 00:06:30,740
So I'm going to paste it here.

109
00:06:31,810 --> 00:06:34,150
You can get that from the resources.

110
00:06:35,160 --> 00:06:37,140
I think you did all in one line.

111
00:06:37,230 --> 00:06:38,550
So a switch.

112
00:06:38,760 --> 00:06:41,160
And then in single code we give the click command.

113
00:06:41,160 --> 00:06:42,150
Not directly.

114
00:06:42,600 --> 00:06:46,020
So the first command uploads the artifact to the S3 bucket.

115
00:06:46,080 --> 00:06:51,660
Second Command creates a new application version in Beanstalk application.

116
00:06:52,080 --> 00:06:56,610
Third is going to deploy that application version to bean stack environment.

117
00:06:57,360 --> 00:06:58,530
So take your time.

118
00:06:58,530 --> 00:07:02,610
Go through these commands and pretty simple commands.

119
00:07:04,620 --> 00:07:07,050
And let's see if this.

120
00:07:09,410 --> 00:07:11,060
And commit and push.

121
00:07:16,750 --> 00:07:22,210
I will call it as being stage pipeline control less.

122
00:07:23,180 --> 00:07:26,190
That checkmark is published.

123
00:07:26,510 --> 00:07:27,460
This branch.

124
00:07:27,470 --> 00:07:28,310
Sure.

125
00:07:32,130 --> 00:07:32,600
Okay.

126
00:07:32,700 --> 00:07:35,160
Now, the next thing is pretty simple.

127
00:07:35,160 --> 00:07:37,080
We create the pipeline and execute it.

128
00:07:37,080 --> 00:07:41,400
But before we do that, one final thing on the bean stack.

129
00:07:42,120 --> 00:07:44,190
So go to B stack environment.

130
00:07:45,900 --> 00:07:47,730
And that's the URL, right?

131
00:07:47,760 --> 00:07:48,990
Let's click on that.

132
00:07:50,320 --> 00:07:50,500
Okay.

133
00:07:50,500 --> 00:07:53,500
So that's the default application, the sample application.

134
00:07:53,500 --> 00:08:02,170
When we deploy our artifact, it will be accessible at slash login and target group, which does the

135
00:08:02,170 --> 00:08:11,080
health check will be checking by default the health slash our application response at slash login.

136
00:08:11,500 --> 00:08:16,330
So we need to update the health check of this environment before the deployment.

137
00:08:16,570 --> 00:08:19,630
So go to our environment configuration.

138
00:08:21,320 --> 00:08:24,080
And come down to the load balancer section.

139
00:08:27,110 --> 00:08:28,640
I think it's up there.

140
00:08:28,670 --> 00:08:31,110
The processes put a checkmark there.

141
00:08:31,130 --> 00:08:32,159
Action.

142
00:08:32,179 --> 00:08:32,840
Edit.

143
00:08:33,700 --> 00:08:35,710
And if you see health, check it slash.

144
00:08:35,710 --> 00:08:39,820
We need to change it to slash log in and save it.

145
00:08:41,380 --> 00:08:42,159
That's not it.

146
00:08:42,179 --> 00:08:42,940
Not just safe.

147
00:08:42,960 --> 00:08:44,690
You also need to apply it.

148
00:08:44,700 --> 00:08:49,230
Once you apply it, we'll start making the change and it will take some time.

149
00:08:49,230 --> 00:08:52,620
You need to wait until this is completely okay.

150
00:08:52,650 --> 00:08:54,660
Now this may go to.

151
00:08:55,400 --> 00:08:56,330
Unhealthy state.

152
00:08:56,330 --> 00:08:57,710
It may go to degraded it.

153
00:08:57,740 --> 00:08:58,400
Not it may.

154
00:08:58,400 --> 00:09:04,070
It will because sample application doesn't respond to its last login if you see that.

155
00:09:04,550 --> 00:09:07,690
So this is what will return in the health check and it will fail.

156
00:09:07,700 --> 00:09:08,600
But don't worry.

157
00:09:08,600 --> 00:09:12,140
Once we deploy our artifact, this will go green.

158
00:09:13,180 --> 00:09:13,780
So don't worry.

159
00:09:13,780 --> 00:09:16,270
If this becomes red, this is supposed to happen.

160
00:09:16,270 --> 00:09:19,390
After we deploy our artifact, it will go to green.

161
00:09:20,650 --> 00:09:20,930
Okay.

162
00:09:20,950 --> 00:09:22,450
Now the final part.

163
00:09:22,870 --> 00:09:24,700
We need to create the pipeline.

164
00:09:24,820 --> 00:09:28,210
So I'm going to say the Jenkins new item.

165
00:09:30,420 --> 00:09:33,600
I will call this a C, C, D hyphen.

166
00:09:34,750 --> 00:09:38,710
Jenkins hyphen bean hyphen stage.

167
00:09:38,920 --> 00:09:44,290
You need to remember this job name very well because we will be mentioning this job in in production

168
00:09:44,290 --> 00:09:45,160
pipeline.

169
00:09:45,550 --> 00:09:46,570
You will see that.

170
00:09:46,570 --> 00:09:48,640
But make sure you give proper name.

171
00:09:49,780 --> 00:09:53,260
Select pipeline and let's copy.

172
00:09:54,300 --> 00:09:54,720
Right.

173
00:09:55,350 --> 00:09:56,820
Copied from the CI pipeline.

174
00:09:56,820 --> 00:09:58,320
So it copies everything.

175
00:10:00,650 --> 00:10:02,150
And then we'll make the change.

176
00:10:06,040 --> 00:10:06,360
Okay.

177
00:10:06,370 --> 00:10:08,320
So make sure this is checkmark.

178
00:10:10,130 --> 00:10:17,900
And pipeline script from a select git mention your repository now I copied everything You must be also

179
00:10:17,900 --> 00:10:24,530
having the job You copy it and you get everything same except you just need to change the branch.

180
00:10:25,160 --> 00:10:26,690
So what is our branch name?

181
00:10:26,690 --> 00:10:30,350
Our branch name is CCD Gen Bin Hyphen stage.

182
00:10:30,950 --> 00:10:31,970
I'll give that.

183
00:10:33,160 --> 00:10:35,860
CI cd hyphen gen.

184
00:10:36,970 --> 00:10:37,660
Jen.

185
00:10:38,610 --> 00:10:41,190
Bean hyphen, stitch.

186
00:10:41,220 --> 00:10:41,940
Oops.

187
00:10:42,660 --> 00:10:44,220
Hyphen, stitch.

188
00:10:45,400 --> 00:10:45,480
Right.

189
00:10:45,520 --> 00:10:49,490
If you don't have the previous jobs, you should have the previous job.

190
00:10:49,510 --> 00:10:54,880
We tested the continuous integration pipeline, so you just copy, you get everything and you just change

191
00:10:54,880 --> 00:10:55,930
the branch name.

192
00:10:56,740 --> 00:10:58,300
And you say, See?

193
00:11:00,370 --> 00:11:00,850
Okay.

194
00:11:01,060 --> 00:11:03,550
Before we do this, let's see if this is done.

195
00:11:05,330 --> 00:11:08,690
We want it to be health severe.

196
00:11:08,690 --> 00:11:12,350
That is fine, but you need to have it stable, not in the deploying state.

197
00:11:13,190 --> 00:11:16,970
So once it is like this, then we can start testing it.

198
00:11:17,420 --> 00:11:20,150
So let's click on Build now.

199
00:11:23,370 --> 00:11:23,580
Okay.

200
00:11:23,580 --> 00:11:25,020
Let's check out the logs.

201
00:11:26,860 --> 00:11:27,120
Okay.

202
00:11:27,250 --> 00:11:28,540
That failed.

203
00:11:29,390 --> 00:11:31,570
Oh, I make a huge blunder.

204
00:11:33,780 --> 00:11:38,640
So inside the stage you need to have steps, obviously.

205
00:11:38,850 --> 00:11:40,470
So steps.

206
00:11:41,930 --> 00:11:45,350
Open curly brace and close it here.

207
00:11:50,570 --> 00:11:56,120
Now you will not make this mistake because you already have the this pipeline in the resource section.

208
00:11:56,950 --> 00:11:58,620
So it will be incorrect format.

209
00:11:58,630 --> 00:12:06,190
So in the steps you have with a credential, let's verify all the opening and closing of curly brace.

210
00:12:06,190 --> 00:12:07,990
This is for the stage.

211
00:12:08,410 --> 00:12:11,620
This is for the steps and this is for the width.

212
00:12:12,220 --> 00:12:14,860
Credentials can be good.

213
00:12:14,860 --> 00:12:16,090
Let's save this.

214
00:12:18,600 --> 00:12:20,520
Let's commit and push.

215
00:12:22,800 --> 00:12:27,810
Updated steps in the stage.

216
00:12:27,900 --> 00:12:28,920
See what?

217
00:12:30,510 --> 00:12:31,920
To put that checkmark.

218
00:12:34,380 --> 00:12:34,730
Okay.

219
00:12:34,740 --> 00:12:36,480
They should already trigger the pipeline.

220
00:12:36,480 --> 00:12:37,470
Let's go back.

221
00:12:41,440 --> 00:12:41,740
Hmm.

222
00:12:41,950 --> 00:12:42,790
Not yet.

223
00:12:44,300 --> 00:12:44,690
Hmm.

224
00:12:44,840 --> 00:12:45,960
This is strange.

225
00:12:45,980 --> 00:12:47,390
It did not trigger.

226
00:12:49,610 --> 00:12:50,720
Configure.

227
00:12:51,340 --> 00:12:52,960
Between the right branch.

228
00:12:57,250 --> 00:12:58,960
De Jin Bean stage.

229
00:13:01,050 --> 00:13:02,910
Kitchen stage.

230
00:13:03,480 --> 00:13:04,860
Let's go to GitHub.

231
00:13:06,900 --> 00:13:08,010
Three refresh.

232
00:13:10,210 --> 00:13:11,650
Art sees it has a push.

233
00:13:11,680 --> 00:13:13,390
Less than a minute ago.

234
00:13:14,080 --> 00:13:16,540
Then it should have triggered the pipeline.

235
00:13:19,530 --> 00:13:19,740
Okay.

236
00:13:19,740 --> 00:13:21,230
Let's check the Web hooks.

237
00:13:23,890 --> 00:13:24,640
Books.

238
00:13:28,070 --> 00:13:28,700
Edit.

239
00:13:30,900 --> 00:13:32,910
Recent deliveries.

240
00:13:33,970 --> 00:13:35,290
That also went fine.

241
00:13:36,300 --> 00:13:39,150
If we try this one, we deliver.

242
00:13:40,470 --> 00:13:41,910
You deliver this payload?

243
00:13:42,570 --> 00:13:43,200
Yeah.

244
00:13:43,620 --> 00:13:44,610
It's going fine.

245
00:13:48,960 --> 00:13:49,520
Okay.

246
00:13:51,620 --> 00:13:51,860
Okay.

247
00:13:51,860 --> 00:13:54,920
I'm going to make one more change and test it once again.

248
00:13:56,090 --> 00:13:58,040
Um, this time.

249
00:13:58,040 --> 00:14:00,380
Let's check the read me dot md file.

250
00:14:02,760 --> 00:14:03,010
Okay.

251
00:14:03,060 --> 00:14:05,010
Add some more hash there.

252
00:14:05,010 --> 00:14:06,210
Control less.

253
00:14:10,560 --> 00:14:11,910
Commit and push.

254
00:14:14,450 --> 00:14:15,380
Just.

255
00:14:16,780 --> 00:14:17,320
Web.

256
00:14:18,350 --> 00:14:19,010
Hook.

257
00:14:24,030 --> 00:14:24,950
Checkmark.

258
00:14:29,360 --> 00:14:29,900
Okay.

259
00:14:30,500 --> 00:14:31,610
Let's check once again.

260
00:14:36,160 --> 00:14:36,410
Okay.

261
00:14:36,430 --> 00:14:37,240
Still not happening.

262
00:14:37,240 --> 00:14:38,620
Let's do a build now.

263
00:14:39,880 --> 00:14:40,390
Oh.

264
00:14:40,570 --> 00:14:43,320
It did not pull the source code, it seems.

265
00:14:43,330 --> 00:14:44,730
Maybe that is the reason.

266
00:14:44,740 --> 00:14:46,270
Well tested once again.

267
00:14:47,300 --> 00:14:49,700
But let this pipeline complete first.

268
00:14:53,070 --> 00:14:56,580
Once again now I think it will work.

269
00:15:00,550 --> 00:15:00,930
Okay.

270
00:15:00,940 --> 00:15:03,130
That's the wrong command that I mentioned there.

271
00:15:03,130 --> 00:15:05,800
And we and it should be controlled less.

272
00:15:08,040 --> 00:15:09,330
Government and push.

273
00:15:11,510 --> 00:15:14,900
And we in command control us.

274
00:15:15,620 --> 00:15:16,940
Put that checkmark.

275
00:15:19,530 --> 00:15:19,880
Okay.

276
00:15:19,890 --> 00:15:21,090
Let's check once again.

277
00:15:23,740 --> 00:15:23,930
Yeah.

278
00:15:23,980 --> 00:15:24,880
Yeah, it triggered.

279
00:15:24,880 --> 00:15:28,300
No, that one was not happening.

280
00:15:28,300 --> 00:15:31,780
Maybe because the code was not pulled.

281
00:15:33,800 --> 00:15:34,130
Okay.

282
00:15:34,160 --> 00:15:35,370
The pipeline got triggered.

283
00:15:35,390 --> 00:15:37,430
Let's wait for it to complete.

284
00:15:39,280 --> 00:15:39,630
Okay.

285
00:15:39,640 --> 00:15:41,220
That is a success.

286
00:15:41,240 --> 00:15:42,910
A successful pipeline.

287
00:15:43,780 --> 00:15:46,210
And let's check our environment.

288
00:15:47,390 --> 00:15:48,800
Let's refresh this.

289
00:15:49,890 --> 00:15:50,400
Okay.

290
00:15:50,430 --> 00:15:52,830
It's in a healthy state and it may take some time.

291
00:15:52,830 --> 00:15:53,880
So hold on.

292
00:15:54,390 --> 00:15:57,780
If it's not there yet, let's keep refreshing.

293
00:15:57,780 --> 00:16:03,180
And the running version still shows sample application, but it has deployed a new application.

294
00:16:03,180 --> 00:16:05,130
You need to just refresh this page.

295
00:16:08,030 --> 00:16:10,570
Now you see running version three, that's the build ID.

296
00:16:10,610 --> 00:16:18,200
Now, if you click on that link control click, you should see our new application deployed.

297
00:16:19,760 --> 00:16:20,200
Right.

298
00:16:20,210 --> 00:16:25,460
You go to the application questions and you should see the new application there.

299
00:16:25,490 --> 00:16:25,880
Right.

300
00:16:25,880 --> 00:16:28,040
And that downloaded from the S3 bucket.

301
00:16:28,040 --> 00:16:31,100
So in the S3 bucket, also, you should have that artifact.

302
00:16:31,280 --> 00:16:34,340
So go to your S3 bucket bit.

303
00:16:34,790 --> 00:16:35,180
Yeah.

304
00:16:35,210 --> 00:16:38,080
Object refresh there.

305
00:16:38,090 --> 00:16:39,230
That's the S3 bucket.

306
00:16:39,230 --> 00:16:41,030
And we have the artifact in that.

307
00:16:42,000 --> 00:16:42,210
Right.

308
00:16:42,300 --> 00:16:49,440
So the command uploads the artifact to a three bucket and then it creates then application version there,

309
00:16:49,860 --> 00:16:52,920
and then it will do the deployment to the environment.

310
00:16:53,860 --> 00:16:54,030
Okay.

311
00:16:54,270 --> 00:16:56,190
So that is for the staging environment.

312
00:16:56,190 --> 00:17:02,460
That pipeline production environment is also similar, but there's a little catch and we will talk about

313
00:17:02,460 --> 00:17:04,140
that in the next lecture.

314
00:17:04,140 --> 00:17:06,569
So complete this and join me in the next one.

