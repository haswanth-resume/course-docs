1
00:00:10,230 --> 00:00:12,000
Welcome to the project.

2
00:00:12,360 --> 00:00:16,379
The name of this project is Continuous Delivery Hybrid.

3
00:00:17,130 --> 00:00:22,230
The reason why we are calling it hybrid is because we're going to use Jenkins as a continuous integration

4
00:00:22,230 --> 00:00:24,780
and a pass and SAS services.

5
00:00:30,140 --> 00:00:35,120
To follow along in this project, you should have done continuous delivery project with Jenkins and

6
00:00:35,120 --> 00:00:39,980
Tool and Continuous Delivery project with us.

7
00:00:39,980 --> 00:00:46,160
So we're going to use existing resource of our previous two projects and also all the knowledge that

8
00:00:46,160 --> 00:00:49,850
you have gathered in this previous two projects.

9
00:00:55,570 --> 00:01:01,330
So in this project we're going to use Jenkins for continuous integration and we're going to use some

10
00:01:01,330 --> 00:01:08,050
PASS and SAS services, like we're going to use code, build Bienstock ideas and a few other services.

11
00:01:08,050 --> 00:01:12,940
Jenkins will be running on Easy two instance, or you can be running it anywhere else.

12
00:01:13,510 --> 00:01:20,350
The situation will be more apt when you have a hybrid environment where where you're running your continuous

13
00:01:20,350 --> 00:01:28,840
integration or some workload on computers and operating systems and also leveraging a s or any cloud

14
00:01:28,840 --> 00:01:31,450
computing managed services.

15
00:01:32,730 --> 00:01:38,370
And that is the reason why we are calling it as a continuous delivery hybrid.

16
00:01:39,820 --> 00:01:40,720
Tools.

17
00:01:41,550 --> 00:01:43,240
So most of the tools are similar.

18
00:01:43,260 --> 00:01:49,290
What we used in continuous integration pipeline, starting with Jenkins for continuous integration Nexis

19
00:01:49,290 --> 00:01:57,300
so NetApp repository for the artifact storage and download soon the cube scanner and toner cube server

20
00:01:57,300 --> 00:02:03,870
for code analysis maven to build our artifact get as the version control system.

21
00:02:07,180 --> 00:02:12,550
Slack for notification, but for the deployment we will be using bienstock.

22
00:02:13,150 --> 00:02:20,470
We will deploy our artifact from Jenkins to a elastic beanstalk and that we will be doing by using a

23
00:02:20,980 --> 00:02:23,170
C ally in the Jenkins.

24
00:02:24,310 --> 00:02:28,390
EWR se three where we will upload our artifact.

25
00:02:28,990 --> 00:02:30,420
So let's see.

26
00:02:30,430 --> 00:02:36,580
Eli running from Jenkins is basically going to upload the artifact to the S3 bucket.

27
00:02:37,560 --> 00:02:45,090
And then update the beans tag environment with new artifact downloading from the S3 bucket.

28
00:02:45,810 --> 00:02:52,890
So I applaud the artifact to with three bucket and then on the bean stack it will fetch that artifact

29
00:02:52,890 --> 00:02:59,700
from the S3 bucket and deploy flow of execution the steps that we are going to take in order to complete

30
00:02:59,700 --> 00:03:01,050
this project.

31
00:03:04,090 --> 00:03:07,180
First we will validate our continuous integration pipeline.

32
00:03:07,180 --> 00:03:12,580
We will power on our Jenkins Nexus owner cube test our pipeline.

33
00:03:13,060 --> 00:03:17,350
Also, we will update the GitHub webhook with the new Jenkins IP.

34
00:03:18,670 --> 00:03:23,690
We will log in or search to Jenkins and install a ally.

35
00:03:24,190 --> 00:03:30,340
If you did previous projects continuous delivery project, this must be already installed.

36
00:03:31,840 --> 00:03:39,460
We will go to our source code repository, git repository and create a new branch for this project for

37
00:03:39,460 --> 00:03:40,690
staging environment.

38
00:03:42,280 --> 00:03:48,610
Then we need to take care of some worse services, starting with creating an S3 bucket where we will

39
00:03:48,610 --> 00:03:50,770
be uploading our artefact.

40
00:03:51,160 --> 00:03:53,590
And this is for the bean stack environment.

41
00:03:54,010 --> 00:03:57,970
We will store the artifact in the bucket so we can.

42
00:03:58,660 --> 00:04:00,820
Deployed to bienstock environment.

43
00:04:01,450 --> 00:04:07,030
I am user with access key for Beans, TAC Policy and S3 policy.

44
00:04:07,840 --> 00:04:13,200
So in Jenkins we use a CLI and it needs the access keys with the correct policy.

45
00:04:13,210 --> 00:04:15,190
We will be doing that in this step.

46
00:04:16,130 --> 00:04:22,880
We'll create a Bienstock application with the name V Pro App and it will create an environment inside

47
00:04:22,880 --> 00:04:23,450
that.

48
00:04:24,970 --> 00:04:26,140
They know a new branch.

49
00:04:26,140 --> 00:04:30,520
We will write the Jenkins file and committed to the git repository.

50
00:04:32,280 --> 00:04:38,490
We'll create a pipeline in Jenkins for the staging environment and test it once it is tested.

51
00:04:38,520 --> 00:04:38,850
Good.

52
00:04:38,850 --> 00:04:44,190
Then we are going to write a Jenkins file for production environment and for production we create a

53
00:04:44,190 --> 00:04:46,140
new Beanstalk environment.

54
00:04:46,470 --> 00:04:53,460
So in the same bean stack application, we will have two environment, one for staging and one for production.

55
00:04:53,700 --> 00:04:58,440
So till the fifth step, we would have already tested the staging environment.

56
00:04:58,830 --> 00:05:02,820
Then for the production, we will create a new beanstalk environment.

57
00:05:03,360 --> 00:05:07,470
Create a new branch for production environment in our git repository.

58
00:05:08,460 --> 00:05:10,740
Write a Jenkins file for a production environment.

59
00:05:10,740 --> 00:05:13,620
Create a pipeline for production and tested.

60
00:05:15,170 --> 00:05:18,350
So if you did previous continuous delivery projects.

61
00:05:19,250 --> 00:05:23,000
And you must have understood it is simpler than the previous one.

62
00:05:23,800 --> 00:05:26,890
So let's get into the action and find out.

