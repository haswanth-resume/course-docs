1
00:00:01,080 --> 00:00:02,040
Darker hyphen.

2
00:00:02,040 --> 00:00:03,900
Compose up.

3
00:00:04,680 --> 00:00:05,610
Let's hit enter.

4
00:00:09,080 --> 00:00:09,350
Okay.

5
00:00:09,350 --> 00:00:11,510
There is an error in our docket compose file.

6
00:00:12,120 --> 00:00:15,770
Docker compose colon we have given which it says an invalid syntax.

7
00:00:18,860 --> 00:00:21,200
And we have to actually give equal to.

8
00:00:23,770 --> 00:00:27,810
As we did over here, got carried away because of the YAML syntax.

9
00:00:28,920 --> 00:00:30,390
So let's see if that.

10
00:00:32,080 --> 00:00:33,250
Let's try once again.

11
00:00:35,400 --> 00:00:36,570
Okay, this is good.

12
00:00:36,600 --> 00:00:39,480
It is creating a network name compose default.

13
00:00:39,840 --> 00:00:41,490
Create a two volumes.

14
00:00:43,520 --> 00:00:45,540
I created the volume.

15
00:00:46,170 --> 00:00:46,830
Yes.

16
00:00:47,070 --> 00:00:49,710
And then creating containers.

17
00:00:50,930 --> 00:00:55,970
And all the output is coming on the screen because we're running it on the foreground.

18
00:00:56,000 --> 00:00:59,300
If you want to run it in the background, we can give hyphen the option.

19
00:01:00,430 --> 00:01:02,110
But let's just run it in the foreground.

20
00:01:02,110 --> 00:01:03,130
Let's see all the logs.

21
00:01:03,130 --> 00:01:03,820
Let's test it.

22
00:01:03,820 --> 00:01:06,220
If you're good, then we'll run it also in the background.

23
00:01:08,190 --> 00:01:08,760
Okay.

24
00:01:09,000 --> 00:01:11,890
Tomcat is up squaring the rabbit MQ.

25
00:01:11,910 --> 00:01:13,410
You'll see some rabbit MQ errors.

26
00:01:13,410 --> 00:01:14,490
You can ignore them.

27
00:01:17,230 --> 00:01:18,820
Okay, let's check.

28
00:01:21,450 --> 00:01:23,970
So we have given IP address to our VM.

29
00:01:24,990 --> 00:01:30,030
And we can check it from the compose file or compose from one file.

30
00:01:33,640 --> 00:01:35,130
I'll open another gate.

31
00:01:35,140 --> 00:01:35,920
Bash.

32
00:01:37,750 --> 00:01:41,020
Migrant file is in F drive.

33
00:01:43,150 --> 00:01:43,450
Yeah.

34
00:01:43,450 --> 00:01:44,170
At this spot.

35
00:01:44,170 --> 00:01:45,310
EV Drive Docker engine.

36
00:01:45,310 --> 00:01:46,270
This is the file.

37
00:01:46,300 --> 00:01:48,280
This is the place where I have the vagrant file.

38
00:01:48,430 --> 00:01:52,350
And in the vagrant file we have mentioned the IP address, static IP.

39
00:01:52,360 --> 00:01:55,600
So let's access our Docker engine.

40
00:01:57,930 --> 00:02:03,930
IP address and Port 80, which is mapped to an engine x container on Port 80.

41
00:02:04,080 --> 00:02:08,160
But port it is any US default we don't even need to mention it lets access.

42
00:02:12,080 --> 00:02:16,070
Okay, so we get the login page and this login page is coming from Tomcat.

43
00:02:16,070 --> 00:02:20,210
So Engine X is redirecting request to Tomcat app, which is good.

44
00:02:20,210 --> 00:02:26,840
Let's try to log in now admin, underscore VP and same password admin underscore VPI.

45
00:02:29,060 --> 00:02:30,550
And we are able to log in.

46
00:02:30,560 --> 00:02:34,760
That means the Tomcat container is also able to connect to the DB container.

47
00:02:34,760 --> 00:02:37,460
So all this user information is coming from the database.

48
00:02:37,490 --> 00:02:39,080
Let's check Rabbit McHugh.

49
00:02:40,530 --> 00:02:42,240
And that is also good.

50
00:02:42,420 --> 00:02:43,980
Let's check Mama Cash.

51
00:02:45,030 --> 00:02:46,470
Let's take a user.

52
00:02:47,640 --> 00:02:49,570
K data is inserted in cache.

53
00:02:49,590 --> 00:02:50,650
That's a success.

54
00:02:50,670 --> 00:02:52,020
Let's click once again.

55
00:02:52,470 --> 00:02:56,700
Data is coming from cache, so all our services are validated.

56
00:02:56,700 --> 00:03:01,020
We have successfully containerized our application.

