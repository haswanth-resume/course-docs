1
00:00:00,330 --> 00:00:04,830
So let's write our first definition file, which will be of creating a secret.

2
00:00:05,160 --> 00:00:07,020
So I'm going to say file.

3
00:00:07,980 --> 00:00:09,090
We'll name it as.

4
00:00:10,330 --> 00:00:11,360
App hyphen.

5
00:00:11,380 --> 00:00:14,590
Secret dot y html.

6
00:00:18,970 --> 00:00:20,560
So it still shows why.

7
00:00:20,560 --> 00:00:24,910
Amel Because still does not know its a Kubernetes definition file, but we have the plugin.

8
00:00:24,910 --> 00:00:30,010
As long as soon as we give first two lines, it will understand that a component is definition file.

9
00:00:30,520 --> 00:00:32,439
So first API version.

10
00:00:34,510 --> 00:00:36,520
If you're going to use secret objects.

11
00:00:37,500 --> 00:00:40,180
Wasn't his v one kind.

12
00:00:41,490 --> 00:00:42,540
Secret.

13
00:00:43,050 --> 00:00:46,800
You see, as soon as I do that now you see the Cuban symbol over there.

14
00:00:47,720 --> 00:00:49,730
And now we can get this data very easily.

15
00:00:49,730 --> 00:00:51,080
Metadata hit enter.

16
00:00:51,680 --> 00:00:53,810
So we're going to give a name to the secret.

17
00:00:54,110 --> 00:00:55,540
We limit this app hyphen.

18
00:00:55,550 --> 00:00:58,160
Secret Secret.

19
00:01:00,800 --> 00:01:01,760
It's a type.

20
00:01:03,870 --> 00:01:04,739
Oh, back.

21
00:01:08,690 --> 00:01:11,090
Data, not date data.

22
00:01:11,750 --> 00:01:15,830
So we'll create two variables over here, one named as DB POS.

23
00:01:16,250 --> 00:01:23,120
This is just to give the name in the PA definition file so you can give anything our MQ hyphen pass.

24
00:01:24,570 --> 00:01:24,730
Okay.

25
00:01:24,770 --> 00:01:30,200
Now we are going to first encode the values of our passwords and then we're going to mention it over

26
00:01:30,200 --> 00:01:30,680
here.

27
00:01:31,220 --> 00:01:35,410
So from our application properties file, the pro db pass should be the password.

28
00:01:35,420 --> 00:01:36,860
Let's encode this first.

29
00:01:39,680 --> 00:01:47,180
Okay, so first let's encode our password for the pro db Pro db pass.

30
00:01:47,480 --> 00:01:48,380
It's the password.

31
00:01:48,560 --> 00:01:50,660
I'm going to pipe it with base 64.

32
00:01:53,110 --> 00:01:59,380
So you get an encoded value there, which can be used in our definition file for secret.

33
00:01:59,410 --> 00:02:00,670
So I'm going to copy that.

34
00:02:03,250 --> 00:02:04,120
You stood there.

35
00:02:05,870 --> 00:02:08,509
Robin MQ password is guest.

36
00:02:10,080 --> 00:02:11,880
So let's encode that as well.

37
00:02:21,660 --> 00:02:23,010
And let's copy that.

38
00:02:29,940 --> 00:02:30,980
No, this should be good.

39
00:02:30,990 --> 00:02:31,950
I'm going to save this.

40
00:02:31,950 --> 00:02:33,630
And I'm also committed.

41
00:02:34,900 --> 00:02:40,900
The images Committee's secret asset, Comet.

42
00:02:43,590 --> 00:02:48,210
Before we read our other definition file, let's just quickly run a test.

43
00:02:48,450 --> 00:02:50,520
Let's push it to our version control.

44
00:02:51,150 --> 00:02:52,680
It goes to a remote repository.

45
00:02:52,710 --> 00:02:53,910
We're going to fetch it.

46
00:02:54,860 --> 00:02:58,910
In our cop's view, it's a git clone.

47
00:03:04,800 --> 00:03:07,320
We see that in our remote repository.

48
00:03:07,320 --> 00:03:10,320
I'm going to copy this and clone it.

49
00:03:15,150 --> 00:03:15,250
Yes.

50
00:03:15,380 --> 00:03:16,280
Let's get into Cuba.

51
00:03:20,800 --> 00:03:22,690
So we should have the secret here.

52
00:03:25,060 --> 00:03:25,810
Let's create it.

53
00:03:25,810 --> 00:03:26,620
Cube CTL.

54
00:03:26,620 --> 00:03:28,990
Create hyphen f.

55
00:03:33,170 --> 00:03:34,190
Secret created.

56
00:03:34,510 --> 00:03:36,410
Still get secret.

57
00:03:39,650 --> 00:03:42,410
Q it'll describe secret.

58
00:03:44,570 --> 00:03:47,210
To see the detail information and you should see now.

59
00:03:48,890 --> 00:03:52,540
We really don't see the value as long as we don't decode them.

60
00:03:53,050 --> 00:03:56,770
I just say it's five bite size and this is of ten bites of size.

61
00:03:57,780 --> 00:04:03,180
So this is safely stored in our Kubernetes cluster, and this really prevents the accidental exposure

62
00:04:03,210 --> 00:04:05,190
of your passwords.

63
00:04:05,550 --> 00:04:11,310
But if your definition file is still public or accessible by many people, they can really see that

64
00:04:11,310 --> 00:04:15,510
it's encoded with base64 and they can easily decode it with base64.

65
00:04:15,990 --> 00:04:20,670
So this is more about best practice in handling secrets.

