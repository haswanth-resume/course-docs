1
00:00:01,060 --> 00:00:04,570
So now finally, let's go through the flow of execution, what we did.

2
00:00:07,040 --> 00:00:09,050
We had all the tools that we need.

3
00:00:09,080 --> 00:00:12,850
We cloned the source code, we get in to vagrant directory.

4
00:00:13,130 --> 00:00:19,490
We brought up all our VMS, we validated it, and then we have set up all the services, one by one,

5
00:00:19,490 --> 00:00:26,420
First MySQL, then Memcache, then Rabbitt MQ, Tomcat, Nginx.

6
00:00:26,420 --> 00:00:29,420
And finally, we also deployed our application.

7
00:00:30,380 --> 00:00:35,210
And now it's time to verify our website from the browser.

8
00:00:36,020 --> 00:00:38,530
So we're going to access Nginx service.

9
00:00:39,680 --> 00:00:41,540
So I'm in web01

10
00:00:41,540 --> 00:00:43,550
Let's get its IP address.

11
00:00:44,690 --> 00:00:47,660
192.168.33.11

12
00:00:47,660 --> 00:00:48,620
.

13
00:00:50,110 --> 00:00:51,310
So let's copy that.

14
00:00:53,360 --> 00:01:00,170
Lets open a browser, so just paste the IP address, We are accessing it on port 80, you don't even need

15
00:01:00,170 --> 00:01:02,090
to mention that that's the default port.

16
00:01:02,570 --> 00:01:06,740
http:// and the ip address

17
00:01:09,010 --> 00:01:14,800
And you should see this login page, this is coming from tomcat, So, Nginx is successfully routing

18
00:01:14,800 --> 00:01:18,520
the request to our application server and now let's login.

19
00:01:19,900 --> 00:01:27,250
So we have the username admin_vp, your login with this user and the password is also same

20
00:01:27,250 --> 00:01:30,640
admin_vp, click on login.

21
00:01:32,320 --> 00:01:39,970
If the logging is successful, that means database db01 MySQL server is connected because this user

22
00:01:40,330 --> 00:01:42,020
is coming from the database.

23
00:01:43,270 --> 00:01:50,050
OK, will also verify other backend services. Like rabbitmq, So for admin_vp user

24
00:01:50,080 --> 00:01:51,520
You have few buttons over here.

25
00:01:51,520 --> 00:01:53,050
You can click on Rabbitt MQ.

26
00:01:53,950 --> 00:01:55,300
It should generate some queue.

27
00:01:56,810 --> 00:02:03,470
Let's go back, let's check also memcache, so click on all user, going to load all the users from

28
00:02:03,470 --> 00:02:06,470
the database and store it in memcache.

29
00:02:07,010 --> 00:02:11,000
So let's select a user, let's say the same user.

30
00:02:11,300 --> 00:02:12,680
Let's go for some other user.

31
00:02:14,850 --> 00:02:19,800
So it says Data is from DB and inserted in cache.

32
00:02:20,770 --> 00:02:26,770
OK, let's go back, and if you click same user, you'll see data is coming from cache and you will see

33
00:02:26,770 --> 00:02:28,270
that loading up very quickly.

34
00:02:30,670 --> 00:02:35,050
So we really validated all our services in our stack

35
00:02:36,550 --> 00:02:37,570
So that's awesome.

36
00:02:37,600 --> 00:02:40,690
The entire stack is up and running, we can you even access it.

37
00:02:40,870 --> 00:02:42,970
We checked all the backend services.

38
00:02:42,970 --> 00:02:44,200
Everything is looking good.

39
00:02:45,290 --> 00:02:48,620
Now, we have done this set up.

40
00:02:49,770 --> 00:02:57,030
VM we have created automatically but provisioning, we did manually, now we will see how we can

41
00:02:57,030 --> 00:02:59,890
also provision automatically with some bash scripts.

42
00:03:00,150 --> 00:03:07,440
So for every service that we are setting up tomcat, mysql, memcache, RabbitMQ, all the services

43
00:03:07,620 --> 00:03:13,100
we will provision automatically, we will run, our vagrant will run shell scripts for us.

44
00:03:13,800 --> 00:03:17,400
So let's go to our vm.

45
00:03:18,960 --> 00:03:21,750
Yeah, I'm logged into a zero one, I'm going to exit from here.

46
00:03:23,730 --> 00:03:27,840
And now we'll delete this entire stack, vagrant destroy.

47
00:03:29,040 --> 00:03:30,900
Which will delete all the VMS.

48
00:03:33,510 --> 00:03:36,960
If you want, you can just say vagrant halt, shut it down.

49
00:03:37,990 --> 00:03:40,810
And then with vagrant up, you can bring up any time you want.

50
00:03:42,430 --> 00:03:48,910
But now I'm going to set up the entire stack automatically, so I'm going to delete all these VMS.

51
00:03:49,930 --> 00:03:50,590
db

52
00:03:53,010 --> 00:03:54,000
Memcache.

53
00:03:57,270 --> 00:03:58,020
rabbit MQ.

54
00:04:04,140 --> 00:04:09,510
And finally, not finally, we have application server, we also have web01

55
00:04:12,910 --> 00:04:18,279
So it's going to give you some pop ups on your screen, just say yes to that pop up so it just updates

56
00:04:18,279 --> 00:04:19,240
the host file.

57
00:04:30,000 --> 00:04:33,830
Checking in your virtual box, all your VMS will be gone.

58
00:04:34,940 --> 00:04:36,380
OK, let's wrap up.

59
00:04:36,950 --> 00:04:43,460
So by using vagrant, we created virtual machines automatically on Oracle vm virtual box.

60
00:04:43,970 --> 00:04:47,630
Then we logged into each and every machine executed shell commands.

61
00:04:47,960 --> 00:04:56,350
And we have set up services, first my sql, then rabbit MQ, then Memcache D, then Tomcat and then finally

62
00:04:56,350 --> 00:04:57,230
the Nginx.

63
00:05:01,580 --> 00:05:09,630
Once the stack is ready, we verified as a user from the browser, we access, the nginx service.

64
00:05:09,970 --> 00:05:16,890
Ngins then forwarded the request to Tomcat server, which then forwarded the request to message broker

65
00:05:16,890 --> 00:05:23,020
rabbit MQ and then to Memcache and MySQL server.

66
00:05:23,210 --> 00:05:29,090
So the query that got executed on Target's server was then cache to the memcache server.

67
00:05:31,010 --> 00:05:39,590
So this entire set up of services was manual, in the next video, you will see how to automate the entire

68
00:05:39,590 --> 00:05:40,070
setup.

69
00:05:41,150 --> 00:05:42,890
Thank you for watching this video.

70
00:05:42,920 --> 00:05:44,660
I will see you in the next one.

