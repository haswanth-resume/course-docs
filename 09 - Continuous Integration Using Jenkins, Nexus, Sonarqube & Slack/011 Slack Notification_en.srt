1
00:00:00,390 --> 00:00:00,810
All right.

2
00:00:00,810 --> 00:00:07,520
So let's do the final thing to complete our continuous integration pipeline, and that is notification

3
00:00:07,530 --> 00:00:09,570
we will be using Slack.

4
00:00:10,140 --> 00:00:18,150
Now, Slack is one of the most popular notification sorry collaboration tool that is used in IT industry,

5
00:00:18,150 --> 00:00:20,730
but it's not just limited to that.

6
00:00:20,880 --> 00:00:21,780
We're taking slack.

7
00:00:21,780 --> 00:00:22,530
As an example.

8
00:00:22,530 --> 00:00:28,590
You can use any kind of notification system, email notification, and there are a few other plugins

9
00:00:28,590 --> 00:00:30,690
in Jenkins that you can use for notification.

10
00:00:30,690 --> 00:00:34,440
Since Slack is pretty popular nowadays, we'll be using Slack.

11
00:00:35,290 --> 00:00:40,720
Think of Slack as new generation Skype minus the video calls.

12
00:00:41,320 --> 00:00:43,990
It's really a very good collaboration tool.

13
00:00:44,560 --> 00:00:47,000
So we already installed a Slack plugin.

14
00:00:47,020 --> 00:00:49,180
We need to create a Slack account.

15
00:00:49,780 --> 00:00:54,100
Create a channel in that channel is seemed like we have groups.

16
00:00:54,900 --> 00:00:57,630
And then we integrate that with the Jenkins.

17
00:00:58,200 --> 00:01:05,970
And in our code, finally, we will put the stage to send notifications for any pass or field.

18
00:01:06,660 --> 00:01:08,850
So let's search for Slack login.

19
00:01:10,420 --> 00:01:12,190
Just search slack login.

20
00:01:13,480 --> 00:01:15,730
And I will say continue with Google.

21
00:01:15,730 --> 00:01:19,780
So I'll use my Google Mail, this one.

22
00:01:21,440 --> 00:01:22,640
And just continue.

23
00:01:25,080 --> 00:01:27,450
So Slack has these workspaces.

24
00:01:27,720 --> 00:01:34,950
So one workspace, maybe a team or maybe a company where all the users are logged in or connected to.

25
00:01:35,310 --> 00:01:40,830
And in that workspace, we can have different channels, like we have groups, for example, WhatsApp

26
00:01:40,830 --> 00:01:41,440
group.

27
00:01:41,460 --> 00:01:44,250
So in one workspace you can have many channels, many groups.

28
00:01:44,250 --> 00:01:46,050
So we'll see create workspace.

29
00:01:46,470 --> 00:01:51,810
And I will just give some name here like the profile we profile CCD.

30
00:01:51,810 --> 00:01:53,970
That will be my workspace name.

31
00:01:54,510 --> 00:01:55,410
Go next.

32
00:01:56,130 --> 00:01:57,780
So what are we working on?

33
00:01:57,780 --> 00:02:02,130
So let's just say DevOps, c, c, d.

34
00:02:05,840 --> 00:02:11,600
If you want to add any individuals over here, I can give the email address and then they'll get a link

35
00:02:11,600 --> 00:02:14,120
and they can also log in to your workspace.

36
00:02:15,150 --> 00:02:17,930
So I just again give my same email address.

37
00:02:17,940 --> 00:02:22,020
You can skip also this one I'll just say teammates and teammates.

38
00:02:22,980 --> 00:02:26,880
So it will try to open a Slack app if you already have it installed.

39
00:02:26,880 --> 00:02:33,360
So you can install Slack app and you can see Open Slack or you can just say cancel and open it from

40
00:02:33,360 --> 00:02:34,160
the browser.

41
00:02:34,170 --> 00:02:36,750
The recommended way is obviously the app.

42
00:02:38,390 --> 00:02:38,750
Okay.

43
00:02:38,750 --> 00:02:42,560
So it looks the same in the app you want you install the Slack app.

44
00:02:42,560 --> 00:02:45,020
If you open you will see it's exactly similar.

45
00:02:45,290 --> 00:02:52,670
So workspace name is V profile secede and we will create a channel here, create channel and will name

46
00:02:52,670 --> 00:02:56,780
it as Jenkins 60.

47
00:02:58,580 --> 00:03:00,200
And just created.

48
00:03:00,200 --> 00:03:06,050
So this channel is like a group and you can add people in this group, you can give the name or their

49
00:03:06,050 --> 00:03:07,070
email address.

50
00:03:07,160 --> 00:03:12,320
If you already if the users are already have logged into this workspace, you can just give the name

51
00:03:12,320 --> 00:03:13,550
or the email address.

52
00:03:13,550 --> 00:03:16,620
We'll just say automatically add anyone who joins.

53
00:03:17,090 --> 00:03:22,250
So anybody who joins the profile will be automatically added to this channel.

54
00:03:23,060 --> 00:03:23,900
See this?

55
00:03:25,100 --> 00:03:25,400
Okay.

56
00:03:25,400 --> 00:03:25,980
Next.

57
00:03:26,000 --> 00:03:33,560
In order for the Jenkins to authenticate to your workspace, we need to create a token in Slack.

58
00:03:33,650 --> 00:03:37,350
For that, we need to add an app in your Slack account.

59
00:03:37,370 --> 00:03:39,260
So just search for the.

60
00:03:40,340 --> 00:03:44,000
Slack apps or add apps to Slack.

61
00:03:44,210 --> 00:03:45,440
Click on this link.

62
00:03:46,040 --> 00:03:48,500
Search for Jenkins app.

63
00:03:49,190 --> 00:03:50,660
You'll get this Jenkins sigh.

64
00:03:50,690 --> 00:03:51,680
Click on that.

65
00:03:55,500 --> 00:03:57,570
Once see add this app to Slack.

66
00:03:59,790 --> 00:04:01,500
And we choose the channel.

67
00:04:01,500 --> 00:04:03,710
We will say this DevOps.

68
00:04:03,720 --> 00:04:04,260
Oh sorry.

69
00:04:04,260 --> 00:04:09,630
This one Jenkins CD add Jenkins CI integration.

70
00:04:10,770 --> 00:04:13,890
And then it will also give you the steps of how to do this.

71
00:04:13,920 --> 00:04:16,329
We are here just for this token.

72
00:04:16,350 --> 00:04:18,180
So copy this token.

73
00:04:19,480 --> 00:04:21,610
And store it somewhere for now.

74
00:04:22,470 --> 00:04:24,210
So I keep it on my sticky notes.

75
00:04:26,170 --> 00:04:27,760
And just come down.

76
00:04:28,480 --> 00:04:29,740
You will see the token here.

77
00:04:29,740 --> 00:04:33,970
Also, you can regenerate the token if you want, but just save the settings.

78
00:04:35,920 --> 00:04:36,160
Okay.

79
00:04:36,160 --> 00:04:39,970
Now we will go to Jenkins, install the plugin and do the integration.

80
00:04:40,180 --> 00:04:46,030
Keep in mind, the workspace is V Profile CD and the channel is Jenkins CD.

81
00:04:46,210 --> 00:04:48,340
So let's go to Jenkins.

82
00:04:48,350 --> 00:04:51,490
Go to manage Jenkins Configure System.

83
00:04:52,500 --> 00:04:53,910
Find Slack here.

84
00:04:53,940 --> 00:04:55,650
It will be mostly down here.

85
00:04:57,720 --> 00:05:01,020
At the end there we have slack.

86
00:05:01,020 --> 00:05:08,490
So give the workspace which is the profile, secede and credentials.

87
00:05:08,490 --> 00:05:10,350
We need to add the token here.

88
00:05:10,350 --> 00:05:12,360
So add Jenkins.

89
00:05:12,660 --> 00:05:15,720
So the kind you have to select is secret text.

90
00:05:17,140 --> 00:05:20,530
And safe based your token here.

91
00:05:20,710 --> 00:05:21,300
Check.

92
00:05:21,310 --> 00:05:22,840
Yeah, that's the one.

93
00:05:24,580 --> 00:05:26,760
Give an ID name and give a description.

94
00:05:26,770 --> 00:05:28,600
I've just given sonar token.

95
00:05:28,840 --> 00:05:29,810
No, not sonar.

96
00:05:29,830 --> 00:05:31,870
My bad slack token.

97
00:05:37,860 --> 00:05:38,880
So give a name.

98
00:05:39,120 --> 00:05:40,050
Just add.

99
00:05:41,720 --> 00:05:46,460
Select your token slack token and give the channel.

100
00:05:48,050 --> 00:05:51,200
LIM So we have Jenkins secede.

101
00:05:52,170 --> 00:05:53,700
And time to test the setting.

102
00:05:53,700 --> 00:05:55,350
Let's click on Test Connections.

103
00:05:56,270 --> 00:05:58,400
And there is a success.

104
00:05:58,730 --> 00:06:02,780
Now, at time this may happen and you will get a failure over here.

105
00:06:03,110 --> 00:06:08,870
That is probably while adding, while logging, creating workspace we make sometimes mistake.

106
00:06:08,870 --> 00:06:13,700
So what you need to do is just if you are getting error, just sign out from here.

107
00:06:13,730 --> 00:06:19,100
Sign in once again, do the whole setup once again, create the workspace, create channel, go through

108
00:06:19,100 --> 00:06:25,640
the whole step again, create a new workspace, new channel name, install the app, get a token and

109
00:06:25,640 --> 00:06:28,940
then save it and then test it if you get a failure.

110
00:06:28,940 --> 00:06:31,370
But if you get a success, well then good.

111
00:06:31,370 --> 00:06:32,720
Just save this.

112
00:06:34,390 --> 00:06:37,840
Now we will add this information in our pipeline code.

113
00:06:38,590 --> 00:06:44,260
So if there is a success or failure, we want it to send notification to our channel, this channel,

114
00:06:44,260 --> 00:06:45,400
Jenkins said.

115
00:06:46,840 --> 00:06:51,880
All right, so now let's add a post installation step.

116
00:06:53,220 --> 00:06:59,370
So any of the stage fails, we should have a post installation step that sends the notification.

117
00:07:00,240 --> 00:07:00,440
Okay.

118
00:07:00,450 --> 00:07:02,820
Let me before that fix this indentation.

119
00:07:02,820 --> 00:07:05,940
The square bracket matches this one.

120
00:07:05,940 --> 00:07:08,160
So let me just bring it here.

121
00:07:08,840 --> 00:07:12,650
And this parenthesis is for Nexus Artifact Uploader plugin.

122
00:07:12,650 --> 00:07:13,910
So let's bring it here.

123
00:07:14,390 --> 00:07:18,320
Okay, so we have these stages and let's trace this line.

124
00:07:18,350 --> 00:07:18,830
Stage stages.

125
00:07:18,830 --> 00:07:19,490
Line.

126
00:07:20,090 --> 00:07:21,770
That's what that once here.

127
00:07:23,630 --> 00:07:24,770
Now here.

128
00:07:26,970 --> 00:07:30,510
That's where red line number 85, just after line number 85.

129
00:07:31,020 --> 00:07:32,610
That's where the stage complete.

130
00:07:32,610 --> 00:07:35,910
And here we are to start a post installation step.

131
00:07:37,240 --> 00:07:37,370
Okay.

132
00:07:37,510 --> 00:07:39,670
So I am entering the code over here.

133
00:07:39,670 --> 00:07:41,620
I'll explain you that.

134
00:07:42,130 --> 00:07:43,240
It's pretty simple.

135
00:07:43,270 --> 00:07:48,550
Post open and close always block means always this will get executed.

136
00:07:48,550 --> 00:07:53,920
So we are just doing an echo printing this message slack notification Slack sent.

137
00:07:53,920 --> 00:07:58,420
This is the plugin that we installed and we are passing three arguments to it.

138
00:07:58,420 --> 00:08:02,170
One is channel, one is the color and another one is the message.

139
00:08:02,320 --> 00:08:06,460
So it will use all this information and we should see notification in our channel.

140
00:08:06,460 --> 00:08:12,700
We have to give the channel name hash and our channel name is Jenkins Sicced.

141
00:08:13,860 --> 00:08:14,280
Color.

142
00:08:14,280 --> 00:08:17,010
You can use the color code, but here there is a function.

143
00:08:17,860 --> 00:08:20,860
Or a key map that will create in a moment.

144
00:08:20,860 --> 00:08:22,300
But this is how it will work.

145
00:08:23,330 --> 00:08:25,940
Colored map will send this argument.

146
00:08:25,940 --> 00:08:27,020
Current build.

147
00:08:27,410 --> 00:08:28,460
Current result.

148
00:08:28,520 --> 00:08:29,750
Current build.

149
00:08:32,159 --> 00:08:32,570
Let's see.

150
00:08:32,580 --> 00:08:33,990
What is this current build?

151
00:08:35,220 --> 00:08:42,210
So current build is a global variable that will have many properties like number result, current result,

152
00:08:42,210 --> 00:08:45,240
display name, many other properties which you can fetch when you run the job.

153
00:08:45,240 --> 00:08:50,400
This gets generated in the runtime, so we're using current build, current result.

154
00:08:51,380 --> 00:08:52,430
Current result.

155
00:08:52,850 --> 00:08:57,040
So this will typically return success or unstable or failure.

156
00:08:57,050 --> 00:08:59,150
So what are we really doing with this?

157
00:09:02,050 --> 00:09:06,250
So at the top of the pipeline, we will have a definition here.

158
00:09:06,290 --> 00:09:08,530
So this is what it is calling color map.

159
00:09:08,710 --> 00:09:11,950
And if the argument is parsed as success, it is going to return good.

160
00:09:11,980 --> 00:09:15,510
So success variable value is good and good in Jenkins.

161
00:09:15,520 --> 00:09:22,150
Sorry, good in slack means green color and danger in slack means red color.

162
00:09:22,270 --> 00:09:31,300
So we are dynamically parsing slack the color code good or danger based on how it worked, how it parsed

163
00:09:31,300 --> 00:09:31,970
or failed.

164
00:09:31,990 --> 00:09:36,760
So if the current result is success, we send good color.

165
00:09:36,760 --> 00:09:42,340
But if it returns failure, then we pass danger color code.

166
00:09:42,370 --> 00:09:44,050
You will see how it works.

167
00:09:44,440 --> 00:09:45,670
Next is the message.

168
00:09:45,670 --> 00:09:46,930
What message do you want to send?

169
00:09:46,930 --> 00:09:49,120
Now you can create your customized message we have.

170
00:09:49,150 --> 00:09:54,360
We are giving over here current build current result variable which will give us success or failure.

171
00:09:54,370 --> 00:10:02,500
We have seen that colon job, the text and the job name, which will be our pipeline name, build and

172
00:10:02,500 --> 00:10:03,520
the build number.

173
00:10:06,250 --> 00:10:08,350
And also we are sending the URL.

174
00:10:08,350 --> 00:10:10,540
So the URL comes in the Slack channel.

175
00:10:10,540 --> 00:10:12,880
If it is a failure, you get the link, you click on it.

176
00:10:12,880 --> 00:10:14,470
You can you can see the logs.

177
00:10:15,750 --> 00:10:15,930
All right.

178
00:10:15,960 --> 00:10:17,370
So this can be customized message.

179
00:10:17,370 --> 00:10:19,140
You can make some changes over here.

180
00:10:20,530 --> 00:10:20,830
Alright.

181
00:10:20,830 --> 00:10:26,230
So once you make all the necessary changes in the code, save it.

182
00:10:27,860 --> 00:10:30,590
And let's push and commit.

183
00:10:32,080 --> 00:10:33,340
Give a message.

184
00:10:34,770 --> 00:10:35,730
Save.

185
00:10:37,240 --> 00:10:43,630
That should trigger the pipeline once the changes are synched and once it is completed, we should receive

186
00:10:43,630 --> 00:10:44,530
a notification.

187
00:10:44,530 --> 00:10:46,120
So let's see the pipeline working.

188
00:10:46,120 --> 00:10:46,990
First of all.

189
00:10:47,020 --> 00:10:48,730
Yeah, the pipeline started.

190
00:10:50,010 --> 00:10:53,580
That completed and we should see in the log.

191
00:10:53,730 --> 00:10:54,030
Yeah.

192
00:10:54,090 --> 00:10:55,290
Paused my screen.

193
00:10:58,630 --> 00:11:01,600
It says it is that sending this notification.

194
00:11:01,600 --> 00:11:07,600
Let's look in our Slack app and we see a success notification over here coming from Jenkins.

195
00:11:07,600 --> 00:11:09,130
And you also see the URL.

196
00:11:10,010 --> 00:11:14,750
You click on the other line, it's going to take you to to the job information.

197
00:11:14,750 --> 00:11:16,630
There you can see the console output.

198
00:11:16,640 --> 00:11:19,280
If it fail, you can see why it failed.

199
00:11:19,280 --> 00:11:21,440
And then you can take the action.

200
00:11:21,440 --> 00:11:22,700
So go ahead.

201
00:11:22,700 --> 00:11:23,930
Try to fail.

202
00:11:24,690 --> 00:11:26,850
The pipeline, the way you can fail it.

203
00:11:26,850 --> 00:11:31,470
You make some syntax error committed and you see you get a failed notification.

204
00:11:32,450 --> 00:11:39,260
Maybe over here will instead of MV and we will just make it a V in.

205
00:11:40,560 --> 00:11:41,160
One.

206
00:11:41,460 --> 00:11:42,270
Just some change.

207
00:11:42,270 --> 00:11:43,530
So it feels right.

208
00:11:43,530 --> 00:11:44,520
Save it.

209
00:11:46,860 --> 00:11:52,650
Comment and push testing slack notification saying this.

210
00:11:55,290 --> 00:11:55,940
So I'm not going to.

211
00:11:55,950 --> 00:11:56,700
Jenkins Right.

212
00:11:56,730 --> 00:12:00,870
I will be just waiting for the notification to come on my Slack channel.

213
00:12:01,740 --> 00:12:03,280
Just open my Slack app.

214
00:12:03,300 --> 00:12:04,500
Oh, you see that already?

215
00:12:04,500 --> 00:12:04,920
We got it.

216
00:12:04,920 --> 00:12:05,940
Failure, right?

217
00:12:05,940 --> 00:12:08,130
And we can see why it failed.

218
00:12:10,050 --> 00:12:10,290
All right.

219
00:12:10,290 --> 00:12:15,270
And then you can go to the logs and you can check why it failed and then you can fix the problem.

220
00:12:15,460 --> 00:12:15,610
Right.

221
00:12:15,630 --> 00:12:17,520
So there could be a code related problem.

222
00:12:17,520 --> 00:12:21,510
There could be your pipeline code problem or developers code problem, anything.

223
00:12:21,510 --> 00:12:24,600
We get a notification and then we can see what to do with that.

224
00:12:25,950 --> 00:12:28,950
And if you look at the color scheme, right, green is for success.

225
00:12:28,950 --> 00:12:30,100
Red is for failure.

226
00:12:30,120 --> 00:12:31,800
That's working pretty well.

227
00:12:32,100 --> 00:12:36,150
And that's the message, the whole message that we have constructed there.

228
00:12:36,210 --> 00:12:42,840
I think now you're getting the hang of it about this message build dot result, right?

229
00:12:42,840 --> 00:12:49,710
And then the job name and then the build number and you can see more info at this build URL.

230
00:12:50,550 --> 00:12:53,760
So all that is coming really well together.

231
00:12:54,090 --> 00:13:00,810
And that concludes our project, our pipeline, the continuous integration pipeline completed.

232
00:13:01,470 --> 00:13:06,390
Obviously fix the problem with the code, make sure the pipeline runs.

233
00:13:07,210 --> 00:13:11,500
If you are continuing with the next lectures, it's fine.

234
00:13:11,500 --> 00:13:18,640
Otherwise shut down power off sooner nexus and Jenkins because they are not in free tier.

235
00:13:22,510 --> 00:13:23,800
Stop instances.

236
00:13:25,220 --> 00:13:25,970
Stop.

237
00:13:27,030 --> 00:13:30,030
Now, if you wish to delete Nexis and Sonar, you can.

238
00:13:30,030 --> 00:13:32,340
But don't terminate Jenkins.

239
00:13:32,550 --> 00:13:37,980
Keep it till the end of the course because we will need it in multiple projects.

240
00:13:38,340 --> 00:13:45,210
Nexus If you recreate, make sure you follow the lectures and create all the repositories.

241
00:13:45,210 --> 00:13:48,360
Make sure you do the post installation steps also and so on.

242
00:13:48,360 --> 00:13:49,080
That is pretty simple.

243
00:13:49,080 --> 00:13:50,310
You just need to bring it up.

244
00:13:51,170 --> 00:13:51,860
Login.

245
00:13:51,860 --> 00:13:52,940
Get the token.

246
00:13:53,360 --> 00:13:55,730
If you're not willing to terminate, it's well and good.

247
00:13:55,730 --> 00:13:56,780
Just shut them down.

248
00:13:56,780 --> 00:13:59,300
There will be no charges if you just shut them down.

249
00:14:00,960 --> 00:14:08,490
These three combine have eight, eight, eight GB of volume, that is 24 GB.

250
00:14:08,490 --> 00:14:12,780
So volumes also come under free tier, it's less than 30 GB total.

251
00:14:12,780 --> 00:14:17,880
So it comes under free tier instances are shut down, so there won't be any charges for it.

252
00:14:17,880 --> 00:14:19,110
So just shut them down.

253
00:14:19,770 --> 00:14:20,160
All right.

254
00:14:20,160 --> 00:14:21,570
That was some good work.

255
00:14:21,720 --> 00:14:22,740
Good job.

256
00:14:23,500 --> 00:14:25,720
We'll be seeing in next upcoming projects.

257
00:14:25,720 --> 00:14:27,130
Also, continuous delivery.

258
00:14:28,080 --> 00:14:29,730
That is all in this project.

259
00:14:29,730 --> 00:14:31,260
I will see you in the next one.

