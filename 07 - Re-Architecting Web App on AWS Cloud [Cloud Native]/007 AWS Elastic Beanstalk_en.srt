1
00:00:00,710 --> 00:00:04,040
Okay, so all our backend services are ready.

2
00:00:04,340 --> 00:00:07,939
Let's collect the information so we profile our ideas.

3
00:00:07,939 --> 00:00:08,660
My skill.

4
00:00:08,660 --> 00:00:10,850
Let's get its endpoint.

5
00:00:13,260 --> 00:00:16,530
Copy that and I'm going to store it in the sticky notes.

6
00:00:17,740 --> 00:00:19,630
And yes instance and point there.

7
00:00:19,660 --> 00:00:21,150
Username Password.

8
00:00:21,160 --> 00:00:23,500
Let's go to rabbit MQ.

9
00:00:24,360 --> 00:00:29,340
I have opened it in this tab Rabbit MQ That is in running state.

10
00:00:31,300 --> 00:00:32,680
And let's come down.

11
00:00:33,710 --> 00:00:35,420
And this is the end point we need.

12
00:00:36,230 --> 00:00:38,700
From that slash, slash till this dot com.

13
00:00:38,720 --> 00:00:39,620
Copy this.

14
00:00:42,630 --> 00:00:46,800
Now we need to store all this information in application properties file.

15
00:00:47,040 --> 00:00:49,380
Now, I also want you to collect one more information.

16
00:00:49,380 --> 00:00:50,430
The port number.

17
00:00:50,970 --> 00:00:51,750
So.

18
00:00:53,890 --> 00:00:58,090
Here you see the port number is 56711.

19
00:00:58,090 --> 00:00:59,710
That one just went there.

20
00:01:00,010 --> 00:01:03,010
And for this it is 3306.

21
00:01:06,040 --> 00:01:08,770
Now these information goes in our application.

22
00:01:09,010 --> 00:01:15,250
You have seen that when we deployed our product, we profile on the VMs, we used application properties

23
00:01:15,250 --> 00:01:18,180
file to give detail of backend services.

24
00:01:18,190 --> 00:01:21,580
Same, We did it in a lift in shift.

25
00:01:22,090 --> 00:01:27,820
So for our application properties file, we are collecting this information and also this will be port

26
00:01:27,820 --> 00:01:31,000
numbers will be helpful while we create security group rules.

27
00:01:31,840 --> 00:01:35,080
Now the last one is the elastic cache.

28
00:01:39,620 --> 00:01:41,810
So let's go to Elastic Cache.

29
00:01:46,230 --> 00:01:48,000
Managed cluster there.

30
00:01:49,290 --> 00:01:49,890
Here.

31
00:01:49,890 --> 00:01:51,420
We just need the endpoint.

32
00:01:51,420 --> 00:01:53,130
So let's copy this endpoint.

33
00:01:57,210 --> 00:01:58,650
And the port number, of course.

34
00:01:58,650 --> 00:02:00,090
One, one, two, one, one.

35
00:02:01,000 --> 00:02:03,370
Okay, so those are the details of our backend services.

36
00:02:03,400 --> 00:02:11,260
Now let's go to Beanstalk and create our Beanstalk instance where we'll host our application.

37
00:02:11,680 --> 00:02:14,410
So search for Beanstalk here.

38
00:02:14,920 --> 00:02:15,490
Oops.

39
00:02:15,490 --> 00:02:16,660
Been stuck.

40
00:02:16,690 --> 00:02:18,640
Elastic Beanstalk.

41
00:02:22,890 --> 00:02:28,170
So if you're greeted with this screen, just click on create application or you can go to applications

42
00:02:28,170 --> 00:02:30,390
here and then click on Create Application.

43
00:02:30,630 --> 00:02:33,210
So I'm going to click here, Create application.

44
00:02:34,090 --> 00:02:35,470
Application name.

45
00:02:35,680 --> 00:02:38,890
I will give v profile hyphen.

46
00:02:40,050 --> 00:02:42,000
Java hyphen app.

47
00:02:42,750 --> 00:02:44,430
Now application.

48
00:02:44,700 --> 00:02:49,770
Think of it as a big container where you can create multiple environments.

49
00:02:49,800 --> 00:02:51,000
Let's see that in a moment.

50
00:02:51,760 --> 00:02:54,580
So let's give Dag.

51
00:02:54,580 --> 00:02:56,530
I will give project tag here.

52
00:02:56,650 --> 00:03:00,430
You cannot give name tag that will be used by this project.

53
00:03:00,430 --> 00:03:04,570
I will say this is for V Profile Project platform.

54
00:03:04,570 --> 00:03:09,400
You have many different platforms like we have different engine type in ideas here, we have different

55
00:03:09,400 --> 00:03:17,350
platform type, you have dot net, Docker, Java, Node, GCP, PHP, Python, Ruby, Tomcat.

56
00:03:17,380 --> 00:03:20,290
Now we know we run our application on Tomcat.

57
00:03:20,620 --> 00:03:22,540
So we'll just select Tomcat here.

58
00:03:24,140 --> 00:03:25,010
We'll go with.

59
00:03:26,080 --> 00:03:26,860
The default here.

60
00:03:26,860 --> 00:03:29,320
Tomcat 8.5 Correcto 11.

61
00:03:29,320 --> 00:03:38,830
Now correcto is really Java so it doesn't use open JDK, it uses its own Java Curto running on 64 bit

62
00:03:38,830 --> 00:03:39,640
Amazon Linux.

63
00:03:39,640 --> 00:03:41,150
So it's going to be an easy to.

64
00:03:41,170 --> 00:03:50,290
Instance with the army of Amazon Linux and keep the default version and fast we will.

65
00:03:51,550 --> 00:03:53,440
Go with the sample application.

66
00:03:53,710 --> 00:03:56,710
Later, we'll upload our code, but we will click on this button.

67
00:03:56,710 --> 00:03:58,420
Configure more options.

68
00:03:59,390 --> 00:04:01,880
Because we need to tweak many settings here.

69
00:04:02,850 --> 00:04:03,840
Okay, scroll up.

70
00:04:04,230 --> 00:04:06,480
We'll click on custom Configuration here.

71
00:04:08,040 --> 00:04:12,240
You can go with the predefined settings here, but we will select our settings.

72
00:04:13,300 --> 00:04:16,000
First, let's go to instances edit.

73
00:04:17,310 --> 00:04:21,000
The instance we will put in the back end security group.

74
00:04:21,390 --> 00:04:24,870
So here is the security group select we profile back in SG.

75
00:04:25,020 --> 00:04:28,170
Now Bienstock gives you instance and it gives you load balancer.

76
00:04:28,170 --> 00:04:32,370
We'll put our load balancer in a different security group instance.

77
00:04:32,370 --> 00:04:34,410
We'll put it in the back end security group.

78
00:04:35,370 --> 00:04:37,720
Now let's go to route volume type.

79
00:04:37,740 --> 00:04:42,510
You can keep it default, container default, or you can go with general purpose or you can you can

80
00:04:42,510 --> 00:04:48,720
mention the GBS volume size, or we'll just keep it as container, which is default.

81
00:04:50,080 --> 00:04:51,610
And let's see if this.

82
00:04:52,570 --> 00:04:53,590
Capacity.

83
00:04:53,620 --> 00:04:54,850
Let's edit this.

84
00:04:57,420 --> 00:05:00,780
So these are the details of your auto scaling group.

85
00:05:00,930 --> 00:05:07,110
We instruct will have an auto scaling group to manage your instances and we will say load balance,

86
00:05:07,140 --> 00:05:08,040
not single instance.

87
00:05:08,040 --> 00:05:11,190
We need multiple instances and it should be automatically scaled.

88
00:05:12,310 --> 00:05:18,820
Will keep minimum instances two and maximum you can keep how many ever you want, because we are really

89
00:05:18,820 --> 00:05:20,020
not going to scale it.

90
00:05:20,320 --> 00:05:26,110
But in real time, make sure you have proper restriction minimum and maximum minimum while keep two

91
00:05:26,110 --> 00:05:27,430
for high availability.

92
00:05:28,450 --> 00:05:31,300
Now let's come down instance type.

93
00:05:31,660 --> 00:05:37,450
It can use the mix, but we'll just keep it to micro, to keep it low cost availability zone, just

94
00:05:37,450 --> 00:05:40,180
keep any placement, any.

95
00:05:40,600 --> 00:05:44,800
So here you can say how many availability zones do you want to use?

96
00:05:44,800 --> 00:05:46,570
Any one, any two, any three.

97
00:05:46,570 --> 00:05:51,790
And you can here select the number of the, the available availability zones.

98
00:05:51,790 --> 00:05:53,740
So we just keep this default.

99
00:05:54,040 --> 00:06:00,550
We'll let it create instance in any availability zone scaling trigger for auto scaling group, there

100
00:06:00,550 --> 00:06:01,570
are multiple metrics.

101
00:06:01,570 --> 00:06:07,570
Now you have network out, which is very popular for web applications like we profile is a web application,

102
00:06:07,780 --> 00:06:12,460
but then you have CPU utilization, you have network in, you have disk.

103
00:06:13,850 --> 00:06:15,440
We'll keep it network out.

104
00:06:15,440 --> 00:06:22,100
So if the network traffic is going out on a larger amount, it will launch more instances.

105
00:06:22,940 --> 00:06:27,470
So scale out if more data is served to the user.

106
00:06:28,430 --> 00:06:30,650
If less data is served to the user.

107
00:06:31,320 --> 00:06:32,430
Skill in.

108
00:06:33,120 --> 00:06:35,190
And we keep all the default settings here.

109
00:06:35,220 --> 00:06:37,350
Just keep save.

110
00:06:38,600 --> 00:06:44,150
You might need to scroll up and scroll down because I know for some reason it by default it scrolls

111
00:06:44,150 --> 00:06:45,350
down automatically.

112
00:06:45,380 --> 00:06:48,260
So that was.

113
00:06:49,890 --> 00:06:50,850
Capacity.

114
00:06:50,910 --> 00:06:55,020
And next is load balancer will make changes to the load balancer later.

115
00:06:55,670 --> 00:06:58,700
But let's just quickly see the settings of load balancer.

116
00:07:00,010 --> 00:07:02,330
You have by default application load balancer.

117
00:07:02,350 --> 00:07:03,370
Listener is 80.

118
00:07:03,400 --> 00:07:06,280
We need four for three, which we will add later.

119
00:07:06,460 --> 00:07:10,630
And health check for our V profile application is slash login.

120
00:07:10,630 --> 00:07:12,280
So we need to change that also.

121
00:07:12,910 --> 00:07:14,530
All this will change later.

122
00:07:15,210 --> 00:07:15,960
Access log.

123
00:07:15,960 --> 00:07:18,480
If you wish, you can store it on the S3 bucket.

124
00:07:18,960 --> 00:07:20,330
You can choose the S3 bucket.

125
00:07:20,340 --> 00:07:22,140
You can create a bucket and choose it.

126
00:07:22,320 --> 00:07:24,000
But let's not do that.

127
00:07:24,300 --> 00:07:26,370
Unnecessary cost for now.

128
00:07:26,370 --> 00:07:27,420
Just cancel it.

129
00:07:28,930 --> 00:07:29,230
Okay.

130
00:07:29,260 --> 00:07:31,650
Next is rolling updates and deployments.

131
00:07:31,660 --> 00:07:32,470
Let's edit this.

132
00:07:32,470 --> 00:07:36,310
This is one of the most interesting feature of being stack.

133
00:07:37,740 --> 00:07:43,230
So deployment policy, when you upload your artifact to stack, when you deploy your artifact, how

134
00:07:43,230 --> 00:07:45,280
do you want to get it deployed?

135
00:07:45,300 --> 00:07:49,110
I mean, there are different policies like all at once, all the instances.

136
00:07:49,110 --> 00:07:53,490
So if you have ten instances, all the ten instances will be brought down and they will be upgraded.

137
00:07:53,490 --> 00:07:56,070
So of course there will be downtime.

138
00:07:57,000 --> 00:07:58,230
Rolling is better.

139
00:07:58,770 --> 00:08:04,860
So let's say you have ten instances and you specify here percentage as 20.

140
00:08:05,190 --> 00:08:07,950
So the batch size.

141
00:08:08,250 --> 00:08:10,760
So 20% of ten is two instances.

142
00:08:10,770 --> 00:08:14,490
So two instances at a time will be upgraded, which is very good.

143
00:08:15,270 --> 00:08:20,250
We just have two instances, so we'll keep this as 50%.

144
00:08:23,550 --> 00:08:26,250
Now there are other deployment policies also.

145
00:08:26,410 --> 00:08:27,210
They're really good.

146
00:08:27,210 --> 00:08:33,720
But this extra cost for that rolling with additional batch side, it is going to launch extra instances

147
00:08:33,720 --> 00:08:35,580
for the upgrade immutable.

148
00:08:35,580 --> 00:08:38,159
It's going to launch the entire new stack.

149
00:08:38,159 --> 00:08:42,090
So if you have ten instance, it's going to launch ten new instances.

150
00:08:42,090 --> 00:08:45,240
So it's not going to deploy the artifact on the same instance.

151
00:08:45,240 --> 00:08:48,870
It's going to be new instance traffic splitting.

152
00:08:50,690 --> 00:08:57,560
This is what typical blue green deployment where you can route a certain percentage of traffic only

153
00:08:57,560 --> 00:08:59,050
to the newer version.

154
00:08:59,060 --> 00:09:05,350
So let's say 10% traffic goes to the new instances and the rest goes to the old instances.

155
00:09:05,360 --> 00:09:11,720
And then every 5 minutes, if if it's good, every 5 minutes, it will be increasing like that.

156
00:09:11,720 --> 00:09:13,760
10%, 10%, 10%.

157
00:09:14,090 --> 00:09:20,450
It's a safer option when you want to roll out something new to your user and you're not so sure how

158
00:09:20,450 --> 00:09:21,440
users will react.

159
00:09:21,440 --> 00:09:23,540
So you can do traffic splitting.

160
00:09:24,050 --> 00:09:29,780
Now I recommend you go through Bienstock stack documentation and read about this deployment policies.

161
00:09:29,930 --> 00:09:33,680
So when the situation comes, you can select the right policy for you.

162
00:09:33,710 --> 00:09:38,240
For now, we'll go with rolling 50% batch size.

163
00:09:39,610 --> 00:09:41,140
And take everything else.

164
00:09:41,140 --> 00:09:42,070
A default.

165
00:09:42,460 --> 00:09:42,970
Let's see.

166
00:09:43,000 --> 00:09:43,690
See if.

167
00:09:45,220 --> 00:09:46,630
Next is security.

168
00:09:46,660 --> 00:09:50,620
Edit So this is the security key pair.

169
00:09:52,010 --> 00:09:56,630
So Beanstalk will launch easy to instance, if you want to log into that instance, you need the key

170
00:09:56,630 --> 00:09:56,840
pair.

171
00:09:56,840 --> 00:10:00,110
And that is the reason we created this key pair earlier.

172
00:10:00,800 --> 00:10:02,420
I am instance profile.

173
00:10:02,450 --> 00:10:04,820
You say create instance profile.

174
00:10:05,210 --> 00:10:09,230
If you already see a beanstalk instance profile over there, you can select that.

175
00:10:09,590 --> 00:10:13,340
Or let's just say create instance profile and say save.

176
00:10:14,730 --> 00:10:15,840
Next is monitoring.

177
00:10:15,840 --> 00:10:17,330
We will not do anything here.

178
00:10:17,340 --> 00:10:17,940
Just let's see.

179
00:10:17,940 --> 00:10:23,040
The settings enhanced will keep it as it is for low rolling deployments.

180
00:10:23,040 --> 00:10:23,760
We will need this.

181
00:10:23,760 --> 00:10:28,530
But if you're going with single instance, go with basic monitoring enhanced.

182
00:10:29,040 --> 00:10:32,820
There will be extra charges for enhanced.

183
00:10:32,820 --> 00:10:36,930
But anyways, once our work is done, we will delete it so we will not be charged for it.

184
00:10:37,290 --> 00:10:39,360
So just cancel it.

185
00:10:41,940 --> 00:10:42,300
Okay.

186
00:10:42,750 --> 00:10:43,710
Notification.

187
00:10:43,710 --> 00:10:46,980
You can send the notification to an email address here.

188
00:10:46,980 --> 00:10:48,090
You can mention that.

189
00:10:50,600 --> 00:10:51,530
Network setting.

190
00:10:51,530 --> 00:10:56,120
You can select your own VPC, but we will just use the default VPC.

191
00:10:58,040 --> 00:10:58,610
Database.

192
00:10:58,610 --> 00:11:04,040
You can mention your own ideas which will be tied up with your beanstalk instance.

193
00:11:04,070 --> 00:11:05,960
Now, for production, this is not recommended.

194
00:11:05,960 --> 00:11:11,770
You need to have a separate idea that you created and Beanstalk instance separate for production purpose.

195
00:11:11,780 --> 00:11:14,900
So the lifecycle of both are not tied together.

196
00:11:15,140 --> 00:11:18,290
If you delete beans tag, you don't want your database to get deleted.

197
00:11:20,500 --> 00:11:22,300
Dag added tag.

198
00:11:22,300 --> 00:11:24,640
Let's give name tag.

199
00:11:24,940 --> 00:11:26,020
Name is already reserved.

200
00:11:26,020 --> 00:11:26,310
Right.

201
00:11:26,350 --> 00:11:27,280
Project.

202
00:11:28,520 --> 00:11:29,630
We profile.

203
00:11:30,520 --> 00:11:31,780
And we will receive.

204
00:11:35,430 --> 00:11:35,540
Okay.

205
00:11:35,670 --> 00:11:40,740
I want you to take your time, go through all the settings, read them, digest as much as possible,

206
00:11:40,740 --> 00:11:47,130
or obviously you will not be able to digest all the settings, but you will know that there are these

207
00:11:47,130 --> 00:11:48,780
these kinds of settings.

208
00:11:49,110 --> 00:11:51,180
Don't try to buy heart anything.

209
00:11:51,720 --> 00:11:52,920
Just go through them.

210
00:11:53,770 --> 00:11:56,830
Okay, now we'll click on Create App, but it is going to do two things.

211
00:11:56,830 --> 00:12:01,690
It is going to create the application and inside the application it will create the environment.

212
00:12:01,990 --> 00:12:04,840
All these settings that we are giving is for our environment.

213
00:12:04,840 --> 00:12:06,550
You can have multiple environments.

214
00:12:06,550 --> 00:12:09,970
Also, let's create and see for ourself.

215
00:12:12,000 --> 00:12:14,610
Now, this is going to take time, a lot of time.

216
00:12:14,610 --> 00:12:17,370
So if you need a break, this is the time.

217
00:12:18,250 --> 00:12:21,850
I will pause my screen and come back when this is completed.

218
00:12:22,850 --> 00:12:28,970
Okay, so my application is ready after a few minutes and inside that it has an environment.

219
00:12:29,150 --> 00:12:33,050
Now, as I told you, all the settings that we gave was for the environment.

220
00:12:33,080 --> 00:12:38,660
You can create multiple environments inside an application like dev environment, queue environment,

221
00:12:38,660 --> 00:12:40,400
production, environment like that.

222
00:12:40,610 --> 00:12:42,500
So let's click on the application.

223
00:12:42,950 --> 00:12:48,140
And you see that is the environment name that we had given when creating Bean Stack.

224
00:12:48,170 --> 00:12:50,120
We profile Java app.

225
00:12:50,810 --> 00:12:52,630
It has added hyphen and void.

226
00:12:52,750 --> 00:12:55,250
And you see it's in terminated state.

227
00:12:55,970 --> 00:13:01,700
Now, if you are creating Bean for the first time in the region, you will also get this.

228
00:13:02,030 --> 00:13:04,940
If you don't get this, your environment is good, it's fine.

229
00:13:04,940 --> 00:13:10,850
But if you get this terminated and you look at the error, the instance profile.

230
00:13:11,840 --> 00:13:14,990
Value associated with the environment is invalid.

231
00:13:15,140 --> 00:13:15,800
So.

232
00:13:17,410 --> 00:13:18,680
Let's go back to the environment.

233
00:13:18,700 --> 00:13:24,190
If you get this terminated, create a new environment and give similar settings.

234
00:13:24,640 --> 00:13:26,800
It is going to be web server environment.

235
00:13:28,510 --> 00:13:29,740
Application name.

236
00:13:29,740 --> 00:13:31,540
We select our application name.

237
00:13:31,780 --> 00:13:33,550
We profile Java app.

238
00:13:36,620 --> 00:13:39,920
Tag project v profile environment.

239
00:13:39,950 --> 00:13:48,110
Name will keep it hyphen prod and for the domain just use the same name.

240
00:13:48,110 --> 00:13:52,280
Just make sure we give this V as small not capital.

241
00:13:53,520 --> 00:13:58,260
So this will be the endpoint of your load balancer check availability and it is available.

242
00:13:58,260 --> 00:13:59,430
You can use this name.

243
00:14:00,560 --> 00:14:04,970
How I can say this will be the Earl of your website.

244
00:14:05,390 --> 00:14:11,030
Obviously, we'll have our own name also, which will redirect to this name, but we'll see that later.

245
00:14:11,300 --> 00:14:12,710
Platform same thing.

246
00:14:12,740 --> 00:14:13,610
Tomcat.

247
00:14:14,150 --> 00:14:15,290
Keep it default.

248
00:14:15,710 --> 00:14:16,910
Configure more options.

249
00:14:16,910 --> 00:14:21,470
So you see, this is similar to what we created previously, but that was terminated.

250
00:14:21,470 --> 00:14:23,000
So we are creating a new one.

251
00:14:25,110 --> 00:14:27,360
So all the setting similar instances.

252
00:14:27,360 --> 00:14:31,980
Let's select our V profile back end security group save.

253
00:14:33,300 --> 00:14:34,410
Capacity.

254
00:14:36,330 --> 00:14:37,500
Load balanced.

255
00:14:40,240 --> 00:14:42,670
Minimum, to instance, maximum.

256
00:14:42,700 --> 00:14:44,110
I'll keep it as eight.

257
00:14:47,520 --> 00:14:47,910
Do you do?

258
00:14:47,910 --> 00:14:49,260
Micro instances only.

259
00:14:50,640 --> 00:14:51,440
Scaling trigger.

260
00:14:51,450 --> 00:14:53,250
Keep it default save.

261
00:14:57,050 --> 00:14:58,910
Rolling updates and deployments.

262
00:15:01,380 --> 00:15:02,160
Ruling.

263
00:15:02,990 --> 00:15:05,030
Bat size 50%.

264
00:15:10,510 --> 00:15:11,710
And see this.

265
00:15:13,680 --> 00:15:14,610
Security.

266
00:15:16,110 --> 00:15:18,750
This is why it failed previously.

267
00:15:18,780 --> 00:15:23,940
If you're wondering why it was terminated, that is because there was no service role and we did not

268
00:15:23,940 --> 00:15:25,280
select anything over here.

269
00:15:25,290 --> 00:15:27,420
But now you see there is a service role.

270
00:15:27,570 --> 00:15:30,090
This is the service role we have to select.

271
00:15:30,390 --> 00:15:30,630
Now.

272
00:15:30,630 --> 00:15:38,070
This service role will have permissions privileges to access other services like S3, Cloud watch and

273
00:15:38,070 --> 00:15:38,460
all.

274
00:15:40,010 --> 00:15:42,500
Sound similar if you already have experience with it.

275
00:15:42,780 --> 00:15:44,180
As you know, I am role.

276
00:15:44,180 --> 00:15:47,930
This is the I am roll which has policies in it.

277
00:15:48,440 --> 00:15:51,050
So it was not there previously.

278
00:15:51,050 --> 00:15:51,890
We did not select it.

279
00:15:51,890 --> 00:15:53,570
So the instance got terminated.

280
00:15:53,570 --> 00:15:54,620
We will select it now.

281
00:15:54,620 --> 00:15:57,320
This name and key payer.

282
00:15:57,620 --> 00:15:59,630
Now I am instance profile.

283
00:15:59,630 --> 00:16:04,310
If you see the profile with this name then only selected.

284
00:16:04,340 --> 00:16:07,370
Otherwise do not select anything, just keep it empty.

285
00:16:07,400 --> 00:16:09,170
Don't even click on the dropdown.

286
00:16:10,020 --> 00:16:11,250
Let me repeat it once again.

287
00:16:11,250 --> 00:16:12,450
I am instance Pro file.

288
00:16:12,450 --> 00:16:20,220
Keep it blank select only if you see this name as elastic beans tag hyphen easy to hyphen role then

289
00:16:20,220 --> 00:16:22,500
only selected say save.

290
00:16:24,560 --> 00:16:25,730
Okay, so we saved that.

291
00:16:25,730 --> 00:16:29,870
So if we do not select, it will create the rule with the same name.

292
00:16:32,020 --> 00:16:34,090
Monitoring will keep it enhanced.

293
00:16:36,730 --> 00:16:38,410
One more lasting tags.

294
00:16:38,410 --> 00:16:40,570
We will be adding the project tag.

295
00:16:42,060 --> 00:16:44,880
We profile and save.

296
00:16:46,820 --> 00:16:49,790
Once it's click on Create Environment.

297
00:16:52,160 --> 00:16:53,720
Okay, so this will take some time.

298
00:16:53,720 --> 00:16:55,070
So take a break.

299
00:16:55,730 --> 00:16:57,410
Come back after 5 minutes.

